[ 비밀번호 암호화 ]
@RequestMapping(value = "/", method = RequestMethod.GET)
public String home(Model model, HttpServletRequest request) {
    String id = request.getParameter("id");
    String pw = request.getParameter("pw");

    User user = userMapper.loginById(id);

    if(user != null && passwordEncoder.matches(pw, user.getPw())) {	
//pw 로그인창에서 입력한 비밀번호
//user.getPw() 데이터베이스에 저장된 암호화된 비밀번호
        model.addAttribute("user", user);
        return "redirect:/board/list";
    }

    return "home";
}

Reference
https://github.com/st8324/Docs/blob/master/spring%20framework/Spring%20%EB%B9%84%EB%B0%80%EB%B2%88%ED%98%B8%20%EC%95%94%ED%98%B8%ED%99%94%20-%20spring-security.md

[ 임시 비밀번호 발급 예제 ]

영문자(대문자, 소문자)와 숫자로 이루어진 임시 비밀번호 9자리를 랜덤으로 만들어서
URI 경로를 실행하면 콘솔에 출력하도록 작성
랜덤으로 원하는 범위 min, max 수를 생성할수 있다
이를 이용하여 a~z A~Z 0~0 중 하나를 선택하는 작업을 8번 반복

랜덤한 수	  결과
0~9		 '0'~'9'
10~35		 'a'~'z'
36~61		 'A'~'Z'

배열로 처리하는 방법 arr [] = {}



[ 비밀번호 찾기 구현 기능 ]

로그인창 아래에 비밀번호 찾기 버튼 생성
버튼을 클릭하면 가입시 생성한 아이디와 이메일 입력하면 아이디와 이메일이 일치하는지 확인한 후 일치하면 이메일 전송 기능으로 연결
다르면 일치하지 않는다는 알림창
서비스에서 기능 구현 - 임시비밀번호를 발급하여 
이메일로 임시비밀번호 전송
비밀번호 업데이트


1. 로그인 화면에 비밀번호 찾기 링크 추가
URI:/password/find 추가
2. 컨트롤러에서 해당 URI를 담당하는 메소드 생성 및 find.jsp 추가
3. find.jsp에 ajax를 이용한 id와 email 정보 전송]
4. 컨트롤러에서 해당 정보를 받아서 id와 email 추출






